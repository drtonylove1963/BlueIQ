/*
 * BlueIQ API Gateway
 *
 * This document describes the API for the BlueIQ API Gateway. It serves as the single entry point for all client interactions with the BlueIQ microservices. This specification is designed to be a reference for consumers and a template for similar gateway patterns. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@example.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using BlueIQ.Api.Server.Attributes;
using BlueIQ.Api.Server.Models;

namespace BlueIQ.Api.Server.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class AuthenticationApiController : ControllerBase
    { 
        /// <summary>
        /// Log in a user
        /// </summary>
        /// <remarks>Authenticates a user with their credentials and returns JWT access and refresh tokens.</remarks>
        /// <param name="userLoginRequest">User credentials for login</param>
        /// <response code="200">Login successful, returns access token</response>
        /// <response code="400">Invalid username or password</response>
        /// <response code="401">Authentication failed</response>
        /// <response code="500">Internal Server Error - An unexpected error occurred on the server.</response>
        [HttpPost]
        [Route("/api/v1/auth/login")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("LoginUser")]
        [SwaggerResponse(statusCode: 200, type: typeof(LoginSuccessResponse), description: "Login successful, returns access token")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Invalid username or password")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorResponse), description: "Authentication failed")]
        [SwaggerResponse(statusCode: 500, type: typeof(ErrorResponse), description: "Internal Server Error - An unexpected error occurred on the server.")]
        public virtual IActionResult LoginUser([FromBody]UserLoginRequest userLoginRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default);
            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"expiresIn\" : 3600,\r\n  \"accessToken\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\",\r\n  \"refreshToken\" : \"def50200f07711e9b210d663bd873d93\"\r\n}";
            exampleJson = "{\r\n  \"details\" : \"The 'username' field is required.\",\r\n  \"message\" : \"Invalid input provided.\",\r\n  \"statusCode\" : 400\r\n}";
            exampleJson = "{\r\n  \"details\" : \"The 'username' field is required.\",\r\n  \"message\" : \"Invalid input provided.\",\r\n  \"statusCode\" : 400\r\n}";
            exampleJson = "{\r\n  \"details\" : \"The 'username' field is required.\",\r\n  \"message\" : \"Invalid input provided.\",\r\n  \"statusCode\" : 400\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<LoginSuccessResponse>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Log out a user
        /// </summary>
        /// <remarks>Invalidates the user&#39;s current session. The specifics of invalidation (e.g., token blocklisting) depend on server implementation.</remarks>
        /// <response code="204">Logout successful</response>
        /// <response code="401">Unauthorized - Authentication token is missing or invalid.</response>
        /// <response code="500">Internal Server Error - An unexpected error occurred on the server.</response>
        [HttpPost]
        [Route("/api/v1/auth/logout")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("LogoutUser")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorResponse), description: "Unauthorized - Authentication token is missing or invalid.")]
        [SwaggerResponse(statusCode: 500, type: typeof(ErrorResponse), description: "Internal Server Error - An unexpected error occurred on the server.")]
        public virtual IActionResult LogoutUser()
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default);
            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Refresh an access token
        /// </summary>
        /// <remarks>Obtains a new JWT access token using a valid refresh token.</remarks>
        /// <param name="refreshTokenRequest">Refresh token</param>
        /// <response code="200">Token refresh successful</response>
        /// <response code="401">Invalid or expired refresh token</response>
        /// <response code="500">Internal Server Error - An unexpected error occurred on the server.</response>
        [HttpPost]
        [Route("/api/v1/auth/refresh")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("RefreshToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(LoginSuccessResponse), description: "Token refresh successful")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorResponse), description: "Invalid or expired refresh token")]
        [SwaggerResponse(statusCode: 500, type: typeof(ErrorResponse), description: "Internal Server Error - An unexpected error occurred on the server.")]
        public virtual IActionResult RefreshToken([FromBody]RefreshTokenRequest refreshTokenRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default);
            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"expiresIn\" : 3600,\r\n  \"accessToken\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\",\r\n  \"refreshToken\" : \"def50200f07711e9b210d663bd873d93\"\r\n}";
            exampleJson = "{\r\n  \"details\" : \"The 'username' field is required.\",\r\n  \"message\" : \"Invalid input provided.\",\r\n  \"statusCode\" : 400\r\n}";
            exampleJson = "{\r\n  \"details\" : \"The 'username' field is required.\",\r\n  \"message\" : \"Invalid input provided.\",\r\n  \"statusCode\" : 400\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<LoginSuccessResponse>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
