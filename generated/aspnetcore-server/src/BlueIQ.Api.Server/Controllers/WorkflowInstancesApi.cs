/*
 * BlueIQ API Gateway
 *
 * This document describes the API for the BlueIQ API Gateway. It serves as the single entry point for all client interactions with the BlueIQ microservices. This specification is designed to be a reference for consumers and a template for similar gateway patterns. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@example.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using BlueIQ.Api.Server.Attributes;
using BlueIQ.Api.Server.Models;

namespace BlueIQ.Api.Server.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class WorkflowInstancesApiController : ControllerBase
    { 
        /// <summary>
        /// Cancel Workflow Instance
        /// </summary>
        /// <remarks>Cancels a currently running workflow instance. The instance must be in a cancellable state.</remarks>
        /// <param name="instanceId">ID of the workflow instance to cancel.</param>
        /// <response code="204">Workflow instance cancelled successfully.</response>
        /// <response code="401">Unauthorized - Authentication token is missing or invalid.</response>
        /// <response code="403">Forbidden - User does not have permission to access this resource.</response>
        /// <response code="404">Not Found - The requested resource could not be found.</response>
        /// <response code="409">Conflict - The request could not be completed due to a conflict with the current state of the resource.</response>
        /// <response code="500">Internal Server Error - An unexpected error occurred on the server.</response>
        [HttpPost]
        [Route("/api/v1/workflows/instances/{instanceId}/cancel")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("CancelWorkflowInstance")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorResponse), description: "Unauthorized - Authentication token is missing or invalid.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden - User does not have permission to access this resource.")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not Found - The requested resource could not be found.")]
        [SwaggerResponse(statusCode: 409, type: typeof(ErrorResponse), description: "Conflict - The request could not be completed due to a conflict with the current state of the resource.")]
        [SwaggerResponse(statusCode: 500, type: typeof(ErrorResponse), description: "Internal Server Error - An unexpected error occurred on the server.")]
        public virtual IActionResult CancelWorkflowInstance([FromRoute (Name = "instanceId")][Required]Guid instanceId)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default);
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default);
            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Get a workflow instance by ID
        /// </summary>
        /// <remarks>Retrieves the details and current state of a specific workflow instance by its unique ID.</remarks>
        /// <param name="instanceId">ID of the workflow instance to retrieve</param>
        /// <response code="200">Successful operation</response>
        /// <response code="401">Unauthorized - Authentication token is missing or invalid.</response>
        /// <response code="403">Forbidden - User does not have permission to access this resource.</response>
        /// <response code="404">Not Found - The requested resource could not be found.</response>
        /// <response code="500">Internal Server Error - An unexpected error occurred on the server.</response>
        [HttpGet]
        [Route("/api/v1/workflows/instances/{instanceId}")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("GetWorkflowInstanceById")]
        [SwaggerResponse(statusCode: 200, type: typeof(WorkflowInstance), description: "Successful operation")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorResponse), description: "Unauthorized - Authentication token is missing or invalid.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden - User does not have permission to access this resource.")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not Found - The requested resource could not be found.")]
        [SwaggerResponse(statusCode: 500, type: typeof(ErrorResponse), description: "Internal Server Error - An unexpected error occurred on the server.")]
        public virtual IActionResult GetWorkflowInstanceById([FromRoute (Name = "instanceId")][Required]Guid instanceId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default);
            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"currentStepId\" : \"c1b2a3d4-e5f6-7890-1234-567890abcdef\",\r\n  \"workflowDefinitionId\" : \"a1b2c3d4-e5f6-7890-1234-567890abcdef\",\r\n  \"variables\" : {\r\n    \"documentId\" : \"doc-xyz-123\",\r\n    \"approvedBy\" : null\r\n  },\r\n  \"endedAt\" : \"2023-03-02T14:30:00Z\",\r\n  \"startedAt\" : \"2023-03-01T10:00:00Z\",\r\n  \"id\" : \"123e4567-e89b-12d3-a456-426614174000\",\r\n  \"workflowDefinitionVersion\" : \"1.0.0\",\r\n  \"status\" : \"running\",\r\n  \"updatedAt\" : \"2023-03-01T10:05:00Z\"\r\n}";
            exampleJson = "{\r\n  \"details\" : \"The 'username' field is required.\",\r\n  \"message\" : \"Invalid input provided.\",\r\n  \"statusCode\" : 400\r\n}";
            exampleJson = "{\r\n  \"details\" : \"The 'username' field is required.\",\r\n  \"message\" : \"Invalid input provided.\",\r\n  \"statusCode\" : 400\r\n}";
            exampleJson = "{\r\n  \"details\" : \"The 'username' field is required.\",\r\n  \"message\" : \"Invalid input provided.\",\r\n  \"statusCode\" : 400\r\n}";
            exampleJson = "{\r\n  \"details\" : \"The 'username' field is required.\",\r\n  \"message\" : \"Invalid input provided.\",\r\n  \"statusCode\" : 400\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<WorkflowInstance>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List all workflow instances
        /// </summary>
        /// <remarks>Retrieves a paginated list of all workflow instances, regardless of their status. Supports query parameters for pagination.</remarks>
        /// <param name="page">Page number for pagination</param>
        /// <param name="pageSize">Number of workflow instances per page</param>
        /// <response code="200">A list of workflow instances</response>
        /// <response code="401">Unauthorized - Authentication token is missing or invalid.</response>
        /// <response code="403">Forbidden - User does not have permission to access this resource.</response>
        /// <response code="500">Internal Server Error - An unexpected error occurred on the server.</response>
        [HttpGet]
        [Route("/api/v1/workflows/instances")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("ListWorkflowInstances")]
        [SwaggerResponse(statusCode: 200, type: typeof(WorkflowInstanceListResponse), description: "A list of workflow instances")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorResponse), description: "Unauthorized - Authentication token is missing or invalid.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden - User does not have permission to access this resource.")]
        [SwaggerResponse(statusCode: 500, type: typeof(ErrorResponse), description: "Internal Server Error - An unexpected error occurred on the server.")]
        public virtual IActionResult ListWorkflowInstances([FromQuery (Name = "page")]int? page, [FromQuery (Name = "pageSize")]int? pageSize)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default);
            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"workflowInstances\" : [ {\r\n    \"currentStepId\" : \"c1b2a3d4-e5f6-7890-1234-567890abcdef\",\r\n    \"workflowDefinitionId\" : \"a1b2c3d4-e5f6-7890-1234-567890abcdef\",\r\n    \"variables\" : {\r\n      \"documentId\" : \"doc-xyz-123\",\r\n      \"approvedBy\" : null\r\n    },\r\n    \"endedAt\" : \"2023-03-02T14:30:00Z\",\r\n    \"startedAt\" : \"2023-03-01T10:00:00Z\",\r\n    \"id\" : \"123e4567-e89b-12d3-a456-426614174000\",\r\n    \"workflowDefinitionVersion\" : \"1.0.0\",\r\n    \"status\" : \"running\",\r\n    \"updatedAt\" : \"2023-03-01T10:05:00Z\"\r\n  }, {\r\n    \"currentStepId\" : \"c1b2a3d4-e5f6-7890-1234-567890abcdef\",\r\n    \"workflowDefinitionId\" : \"a1b2c3d4-e5f6-7890-1234-567890abcdef\",\r\n    \"variables\" : {\r\n      \"documentId\" : \"doc-xyz-123\",\r\n      \"approvedBy\" : null\r\n    },\r\n    \"endedAt\" : \"2023-03-02T14:30:00Z\",\r\n    \"startedAt\" : \"2023-03-01T10:00:00Z\",\r\n    \"id\" : \"123e4567-e89b-12d3-a456-426614174000\",\r\n    \"workflowDefinitionVersion\" : \"1.0.0\",\r\n    \"status\" : \"running\",\r\n    \"updatedAt\" : \"2023-03-01T10:05:00Z\"\r\n  } ],\r\n  \"pagination\" : {\r\n    \"totalItems\" : 100,\r\n    \"totalPages\" : 5,\r\n    \"pageSize\" : 20,\r\n    \"currentPage\" : 1\r\n  }\r\n}";
            exampleJson = "{\r\n  \"details\" : \"The 'username' field is required.\",\r\n  \"message\" : \"Invalid input provided.\",\r\n  \"statusCode\" : 400\r\n}";
            exampleJson = "{\r\n  \"details\" : \"The 'username' field is required.\",\r\n  \"message\" : \"Invalid input provided.\",\r\n  \"statusCode\" : 400\r\n}";
            exampleJson = "{\r\n  \"details\" : \"The 'username' field is required.\",\r\n  \"message\" : \"Invalid input provided.\",\r\n  \"statusCode\" : 400\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<WorkflowInstanceListResponse>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Resume Workflow Instance
        /// </summary>
        /// <remarks>Resumes a previously suspended workflow instance.</remarks>
        /// <param name="instanceId">ID of the workflow instance to resume.</param>
        /// <response code="204">Workflow instance resumed successfully.</response>
        /// <response code="401">Unauthorized - Authentication token is missing or invalid.</response>
        /// <response code="403">Forbidden - User does not have permission to access this resource.</response>
        /// <response code="404">Not Found - The requested resource could not be found.</response>
        /// <response code="409">Conflict - The request could not be completed due to a conflict with the current state of the resource.</response>
        /// <response code="500">Internal Server Error - An unexpected error occurred on the server.</response>
        [HttpPost]
        [Route("/api/v1/workflows/instances/{instanceId}/resume")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("ResumeWorkflowInstance")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorResponse), description: "Unauthorized - Authentication token is missing or invalid.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden - User does not have permission to access this resource.")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not Found - The requested resource could not be found.")]
        [SwaggerResponse(statusCode: 409, type: typeof(ErrorResponse), description: "Conflict - The request could not be completed due to a conflict with the current state of the resource.")]
        [SwaggerResponse(statusCode: 500, type: typeof(ErrorResponse), description: "Internal Server Error - An unexpected error occurred on the server.")]
        public virtual IActionResult ResumeWorkflowInstance([FromRoute (Name = "instanceId")][Required]Guid instanceId)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default);
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default);
            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Retry Workflow Instance
        /// </summary>
        /// <remarks>Retries a workflow instance that is in a failed or pending_retry state, typically from its last failed step.</remarks>
        /// <param name="instanceId">ID of the workflow instance to retry.</param>
        /// <response code="200">Workflow instance retry initiated successfully.</response>
        /// <response code="401">Unauthorized - Authentication token is missing or invalid.</response>
        /// <response code="403">Forbidden - User does not have permission to access this resource.</response>
        /// <response code="404">Not Found - The requested resource could not be found.</response>
        /// <response code="409">Conflict - The request could not be completed due to a conflict with the current state of the resource.</response>
        /// <response code="500">Internal Server Error - An unexpected error occurred on the server.</response>
        [HttpPost]
        [Route("/api/v1/workflows/instances/{instanceId}/retry")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("RetryWorkflowInstance")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorResponse), description: "Unauthorized - Authentication token is missing or invalid.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden - User does not have permission to access this resource.")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not Found - The requested resource could not be found.")]
        [SwaggerResponse(statusCode: 409, type: typeof(ErrorResponse), description: "Conflict - The request could not be completed due to a conflict with the current state of the resource.")]
        [SwaggerResponse(statusCode: 500, type: typeof(ErrorResponse), description: "Internal Server Error - An unexpected error occurred on the server.")]
        public virtual IActionResult RetryWorkflowInstance([FromRoute (Name = "instanceId")][Required]Guid instanceId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default);
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default);
            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Start a new workflow instance
        /// </summary>
        /// <remarks>Starts a new instance of a specified workflow definition. Requires the workflow definition ID and can accept initial variables.</remarks>
        /// <param name="startWorkflowInstanceRequest">Parameters to start a workflow instance</param>
        /// <response code="201">Workflow instance started successfully</response>
        /// <response code="400">Invalid input or definition not found</response>
        /// <response code="401">Unauthorized - Authentication token is missing or invalid.</response>
        /// <response code="403">Forbidden - User does not have permission to access this resource.</response>
        /// <response code="404">Workflow definition not found</response>
        /// <response code="500">Internal Server Error - An unexpected error occurred on the server.</response>
        [HttpPost]
        [Route("/api/v1/workflows/instances")]
        [Authorize]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("StartWorkflowInstance")]
        [SwaggerResponse(statusCode: 201, type: typeof(WorkflowInstance), description: "Workflow instance started successfully")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Invalid input or definition not found")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorResponse), description: "Unauthorized - Authentication token is missing or invalid.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden - User does not have permission to access this resource.")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Workflow definition not found")]
        [SwaggerResponse(statusCode: 500, type: typeof(ErrorResponse), description: "Internal Server Error - An unexpected error occurred on the server.")]
        public virtual IActionResult StartWorkflowInstance([FromBody]StartWorkflowInstanceRequest startWorkflowInstanceRequest)
        {

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default);
            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"currentStepId\" : \"c1b2a3d4-e5f6-7890-1234-567890abcdef\",\r\n  \"workflowDefinitionId\" : \"a1b2c3d4-e5f6-7890-1234-567890abcdef\",\r\n  \"variables\" : {\r\n    \"documentId\" : \"doc-xyz-123\",\r\n    \"approvedBy\" : null\r\n  },\r\n  \"endedAt\" : \"2023-03-02T14:30:00Z\",\r\n  \"startedAt\" : \"2023-03-01T10:00:00Z\",\r\n  \"id\" : \"123e4567-e89b-12d3-a456-426614174000\",\r\n  \"workflowDefinitionVersion\" : \"1.0.0\",\r\n  \"status\" : \"running\",\r\n  \"updatedAt\" : \"2023-03-01T10:05:00Z\"\r\n}";
            exampleJson = "{\r\n  \"details\" : \"The 'username' field is required.\",\r\n  \"message\" : \"Invalid input provided.\",\r\n  \"statusCode\" : 400\r\n}";
            exampleJson = "{\r\n  \"details\" : \"The 'username' field is required.\",\r\n  \"message\" : \"Invalid input provided.\",\r\n  \"statusCode\" : 400\r\n}";
            exampleJson = "{\r\n  \"details\" : \"The 'username' field is required.\",\r\n  \"message\" : \"Invalid input provided.\",\r\n  \"statusCode\" : 400\r\n}";
            exampleJson = "{\r\n  \"details\" : \"The 'username' field is required.\",\r\n  \"message\" : \"Invalid input provided.\",\r\n  \"statusCode\" : 400\r\n}";
            exampleJson = "{\r\n  \"details\" : \"The 'username' field is required.\",\r\n  \"message\" : \"Invalid input provided.\",\r\n  \"statusCode\" : 400\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<WorkflowInstance>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Suspend Workflow Instance
        /// </summary>
        /// <remarks>Suspends a currently running workflow instance. A suspended instance can be resumed later.</remarks>
        /// <param name="instanceId">ID of the workflow instance to suspend.</param>
        /// <response code="204">Workflow instance suspended successfully.</response>
        /// <response code="401">Unauthorized - Authentication token is missing or invalid.</response>
        /// <response code="403">Forbidden - User does not have permission to access this resource.</response>
        /// <response code="404">Not Found - The requested resource could not be found.</response>
        /// <response code="409">Conflict - The request could not be completed due to a conflict with the current state of the resource.</response>
        /// <response code="500">Internal Server Error - An unexpected error occurred on the server.</response>
        [HttpPost]
        [Route("/api/v1/workflows/instances/{instanceId}/suspend")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("SuspendWorkflowInstance")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorResponse), description: "Unauthorized - Authentication token is missing or invalid.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden - User does not have permission to access this resource.")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not Found - The requested resource could not be found.")]
        [SwaggerResponse(statusCode: 409, type: typeof(ErrorResponse), description: "Conflict - The request could not be completed due to a conflict with the current state of the resource.")]
        [SwaggerResponse(statusCode: 500, type: typeof(ErrorResponse), description: "Internal Server Error - An unexpected error occurred on the server.")]
        public virtual IActionResult SuspendWorkflowInstance([FromRoute (Name = "instanceId")][Required]Guid instanceId)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default);
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default);
            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default);

            throw new NotImplementedException();
        }
    }
}
