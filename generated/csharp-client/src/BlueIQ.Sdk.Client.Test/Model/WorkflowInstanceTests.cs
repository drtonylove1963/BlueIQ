/*
 * BlueIQ API Gateway
 *
 * This document describes the API for the BlueIQ API Gateway. It serves as the single entry point for all client interactions with the BlueIQ microservices. This specification is designed to be a reference for consumers and a template for similar gateway patterns. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@example.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using BlueIQ.Sdk.Client.Model;
using BlueIQ.Sdk.Client.Client;
using System.Reflection;

namespace BlueIQ.Sdk.Client.Test.Model
{
    /// <summary>
    ///  Class for testing WorkflowInstance
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class WorkflowInstanceTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for WorkflowInstance
        //private WorkflowInstance instance;

        public WorkflowInstanceTests()
        {
            // TODO uncomment below to create an instance of WorkflowInstance
            //instance = new WorkflowInstance();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of WorkflowInstance
        /// </summary>
        [Fact]
        public void WorkflowInstanceInstanceTest()
        {
            // TODO uncomment below to test "IsType" WorkflowInstance
            //Assert.IsType<WorkflowInstance>(instance);
        }

        /// <summary>
        /// Test the property 'WorkflowDefinitionId'
        /// </summary>
        [Fact]
        public void WorkflowDefinitionIdTest()
        {
            // TODO unit test for the property 'WorkflowDefinitionId'
        }

        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'WorkflowDefinitionVersion'
        /// </summary>
        [Fact]
        public void WorkflowDefinitionVersionTest()
        {
            // TODO unit test for the property 'WorkflowDefinitionVersion'
        }

        /// <summary>
        /// Test the property 'CurrentStepId'
        /// </summary>
        [Fact]
        public void CurrentStepIdTest()
        {
            // TODO unit test for the property 'CurrentStepId'
        }

        /// <summary>
        /// Test the property 'Variables'
        /// </summary>
        [Fact]
        public void VariablesTest()
        {
            // TODO unit test for the property 'Variables'
        }

        /// <summary>
        /// Test the property 'StartedAt'
        /// </summary>
        [Fact]
        public void StartedAtTest()
        {
            // TODO unit test for the property 'StartedAt'
        }

        /// <summary>
        /// Test the property 'UpdatedAt'
        /// </summary>
        [Fact]
        public void UpdatedAtTest()
        {
            // TODO unit test for the property 'UpdatedAt'
        }

        /// <summary>
        /// Test the property 'EndedAt'
        /// </summary>
        [Fact]
        public void EndedAtTest()
        {
            // TODO unit test for the property 'EndedAt'
        }
    }
}
